# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-02-03 14:15
from __future__ import unicode_literals

from django.core.exceptions import ObjectDoesNotExist
from django.db import IntegrityError, migrations


def add_default_hours_and_types_to_module_properties(apps, schema_editor):
    ModuleProperties = apps.get_model("merovingian", "ModuleProperties")
    SubjectType = apps.get_model("merovingian", "SubjectType")
    try:
        lecture = SubjectType.objects.get(id=9)
        conservatorium = SubjectType.objects.get(id=11)
    except ObjectDoesNotExist:
        return

    modules_properties = ModuleProperties.objects.filter(hours__isnull=True)
    for module_properties in modules_properties:
        module_properties.hours = 0
        module_properties.save()

    modules_properties = ModuleProperties.objects.filter(type__isnull=True)
    for module_properties in modules_properties:
        if ModuleProperties.objects.filter(
            semester=module_properties.semester,
            type=lecture,
            module=module_properties.module
        ).exists():
            module_properties.type = conservatorium
        else:
            module_properties.type = lecture
        module_properties.save()



class Migration(migrations.Migration):

    dependencies = [
        ('merovingian', '0003_auto_20160203_1456'),
    ]

    operations = [
        migrations.RunPython(add_default_hours_and_types_to_module_properties)
    ]
