# Generated by Django 5.2.5 on 2025-08-27 15:24

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('merovingian', '0001_initial'),
        ('trainman', '0001_initial'),
        ('trinity', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='course',
            name='education_areas',
            field=models.ManyToManyField(blank=True, to='trinity.educationarea'),
        ),
        migrations.AddField(
            model_name='course',
            name='education_disciplines',
            field=models.ManyToManyField(blank=True, to='trinity.educationdiscipline'),
        ),
        migrations.AddField(
            model_name='course',
            name='education_fields',
            field=models.ManyToManyField(blank=True, to='trinity.educationfield'),
        ),
        migrations.AddField(
            model_name='course',
            name='knowledge_areas',
            field=models.ManyToManyField(blank=True, to='trinity.knowledgearea'),
        ),
        migrations.AddField(
            model_name='course',
            name='leading_discipline',
            field=models.ManyToManyField(blank=True, to='trinity.leadingdiscipline'),
        ),
        migrations.AddField(
            model_name='course',
            name='level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='merovingian.courselevel', verbose_name='Education level'),
        ),
        migrations.AddField(
            model_name='course',
            name='profile',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='merovingian.courseprofile', verbose_name='Education profile'),
        ),
        migrations.AddField(
            model_name='coursetoleadingdiscipline',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='merovingian.course', verbose_name='Kierunek'),
        ),
        migrations.AddField(
            model_name='coursetoleadingdiscipline',
            name='leading_discipline',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trinity.leadingdiscipline', verbose_name='Dyscyplina wiodąca'),
        ),
        migrations.AddField(
            model_name='course',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='merovingian.coursetype', verbose_name='Typ'),
        ),
        migrations.AddField(
            model_name='course',
            name='didactic_offer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='merovingian.didacticoffer', verbose_name='Teaching offer'),
        ),
        migrations.AddField(
            model_name='merovingianadmin',
            name='courses',
            field=models.ManyToManyField(blank=True, to='merovingian.course', verbose_name='Managed courses'),
        ),
        migrations.AddField(
            model_name='merovingianadmin',
            name='user_profile',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='trainman.userprofile', verbose_name='User'),
        ),
        migrations.AddField(
            model_name='module',
            name='coordinator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='trainman.teacher', verbose_name='Teacher'),
        ),
        migrations.AddField(
            model_name='module',
            name='didactic_offer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='merovingian.didacticoffer', verbose_name='Teaching offer'),
        ),
        migrations.AddField(
            model_name='moduleproperties',
            name='module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='merovingian.module', verbose_name='Module'),
        ),
        migrations.AddField(
            model_name='module',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='merovingian.moduletype', verbose_name='Type'),
        ),
        migrations.AddField(
            model_name='sgroup',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sgroups', to='merovingian.course', verbose_name='Course'),
        ),
        migrations.AddField(
            model_name='sgroup',
            name='didactic_offer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='merovingian.didacticoffer', verbose_name='Teaching offer'),
        ),
        migrations.AddField(
            model_name='sgroup',
            name='sgroup',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='merovingian.sgroup', verbose_name='Parent subjects group'),
        ),
        migrations.AddField(
            model_name='module',
            name='sgroup',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='merovingian.sgroup'),
        ),
        migrations.AddField(
            model_name='sgroup',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='merovingian.sgrouptype', verbose_name='Type'),
        ),
        migrations.AddField(
            model_name='subject',
            name='didactic_offer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='merovingian.didacticoffer', verbose_name='Teaching offer'),
        ),
        migrations.AddField(
            model_name='subject',
            name='module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='merovingian.module', verbose_name='Module'),
        ),
        migrations.AddField(
            model_name='subject',
            name='slos',
            field=models.ManyToManyField(blank=True, through='trinity.SubjectToModuleLearningOutcome', to='trinity.modulelearningoutcome', verbose_name='Przedmiotowe efekty uczenia się'),
        ),
        migrations.AddField(
            model_name='subject',
            name='assessment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='merovingian.subjectassessment', verbose_name='Type of pass'),
        ),
        migrations.AddField(
            model_name='subject',
            name='difficulty',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='merovingian.subjectdifficulty', verbose_name='Class level'),
        ),
        migrations.AddField(
            model_name='subjecttoteacher',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='merovingian.subject', verbose_name='Subject'),
        ),
        migrations.AddField(
            model_name='subjecttoteacher',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trainman.teacher', verbose_name='Teacher'),
        ),
        migrations.AddField(
            model_name='subject',
            name='teachers',
            field=models.ManyToManyField(blank=True, through='merovingian.SubjectToTeacher', to='trainman.teacher', verbose_name='Teachers'),
        ),
        migrations.AddField(
            model_name='subject',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='merovingian.subjecttype', verbose_name='Type of classes'),
        ),
        migrations.AddField(
            model_name='moduleproperties',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='merovingian.subjecttype', verbose_name='Type of classes'),
        ),
        migrations.AlterUniqueTogether(
            name='moduleproperties',
            unique_together={('semester', 'module', 'type')},
        ),
    ]
