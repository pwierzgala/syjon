# Generated by Django 5.2.5 on 2025-08-27 15:24

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models

import apps.syjon.lib.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('trainman', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CourseLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_pl', models.CharField(max_length=256, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_ua', models.CharField(max_length=256, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_ru', models.CharField(max_length=256, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
            ],
            options={
                'verbose_name': 'Education level',
                'verbose_name_plural': 'Education levels',
            },
        ),
        migrations.CreateModel(
            name='CourseProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_pl', models.CharField(max_length=256, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_ua', models.CharField(max_length=256, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_ru', models.CharField(max_length=256, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
            ],
            options={
                'verbose_name': 'Education profile',
                'verbose_name_plural': 'Education profiles',
            },
        ),
        migrations.CreateModel(
            name='CourseToLeadingDiscipline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('implementation', models.IntegerField(verbose_name='Realizacja [%]')),
            ],
            options={
                'verbose_name': 'Kierunek - Dyscyplina wiodąca',
                'verbose_name_plural': 'Kierunki - Dyscypliny wiodące',
            },
        ),
        migrations.CreateModel(
            name='CourseType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_pl', models.CharField(max_length=256, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_ua', models.CharField(max_length=256, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_ru', models.CharField(max_length=256, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
            ],
            options={
                'verbose_name': 'Course type',
                'verbose_name_plural': 'Course types',
            },
        ),
        migrations.CreateModel(
            name='DidacticOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_pl', models.CharField(max_length=256, null=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_ua', models.CharField(max_length=256, null=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_ru', models.CharField(max_length=256, null=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('start_date', models.DateField(verbose_name='start date')),
                ('end_date', models.DateField(verbose_name='end date')),
            ],
            options={
                'verbose_name': 'Teaching offer',
                'verbose_name_plural': 'Teaching offers',
            },
        ),
        migrations.CreateModel(
            name='MerovingianAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temporary_privileged_access', models.BooleanField(default=False, verbose_name='Temporary Privileged Access')),
            ],
            options={
                'verbose_name': 'Merowing Administrator',
                'verbose_name_plural': 'Merowing Administrator',
            },
        ),
        migrations.CreateModel(
            name='MerovingianSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=32, unique=True, verbose_name='key')),
                ('value', models.CharField(max_length=128, verbose_name='value')),
                ('value_pl', models.CharField(max_length=128, null=True, verbose_name='value')),
                ('value_ua', models.CharField(max_length=128, null=True, verbose_name='value')),
                ('value_ru', models.CharField(max_length=128, null=True, verbose_name='value')),
            ],
            options={
                'verbose_name': 'Merowing Settings',
                'verbose_name_plural': 'Merowing Settings',
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_pl', models.CharField(max_length=256, null=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_ua', models.CharField(max_length=256, null=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_ru', models.CharField(max_length=256, null=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('ects', models.FloatField(blank=True, null=True, verbose_name='ECTS points')),
                ('internal_code', models.CharField(blank=True, max_length=128)),
                ('erasmus_code', models.CharField(blank=True, max_length=128)),
                ('isced_code', models.CharField(blank=True, max_length=128)),
            ],
            options={
                'verbose_name': 'Module',
                'verbose_name_plural': 'Modules',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ModuleProperties',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Semester/Year')),
                ('hours', models.FloatField(verbose_name='Number of hours')),
                ('ects', models.FloatField(verbose_name='ECTS points')),
            ],
            options={
                'verbose_name': 'Module attributes',
                'verbose_name_plural': 'Module attributes',
                'ordering': ('semester',),
            },
        ),
        migrations.CreateModel(
            name='ModuleType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_pl', models.CharField(max_length=256, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_ua', models.CharField(max_length=256, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_ru', models.CharField(max_length=256, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
            ],
            options={
                'verbose_name': 'Module type',
                'verbose_name_plural': 'Module types',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='SGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_pl', models.CharField(max_length=256, null=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_ua', models.CharField(max_length=256, null=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_ru', models.CharField(max_length=256, null=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('start_semester', models.IntegerField(default=1, verbose_name='First semester/year')),
            ],
            options={
                'verbose_name': 'Subjects group',
                'verbose_name_plural': 'Subjects groups',
                'ordering': ('-is_active', '-type', 'name'),
            },
        ),
        migrations.CreateModel(
            name='SGroupType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_pl', models.CharField(max_length=256, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_ua', models.CharField(max_length=256, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_ru', models.CharField(max_length=256, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
            ],
            options={
                'verbose_name': 'Type of subjects group',
                'verbose_name_plural': 'Types of subjects group',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_pl', models.CharField(max_length=256, null=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_ua', models.CharField(max_length=256, null=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_ru', models.CharField(max_length=256, null=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('hours', models.FloatField(verbose_name='Number of hours')),
                ('hours_individual', models.FloatField(default=0, verbose_name='Liczba godzin praca samodzielna')),
                ('semester', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Semester/Year')),
                ('ects', models.FloatField(blank=True, null=True, verbose_name='ECTS points')),
                ('ects_classes', models.FloatField(default=0, verbose_name='ECTS zajęcia')),
                ('ects_individual', models.FloatField(default=0, verbose_name='ECTS praca samodzielna')),
                ('internal_code', models.CharField(blank=True, max_length=128)),
            ],
            options={
                'verbose_name': 'Subject',
                'verbose_name_plural': 'Subjects',
                'ordering': ('semester', 'name', '-type', 'assessment'),
            },
        ),
        migrations.CreateModel(
            name='SubjectAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_pl', models.CharField(max_length=256, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_ua', models.CharField(max_length=256, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_ru', models.CharField(max_length=256, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
            ],
            options={
                'verbose_name': 'Type of pass',
                'verbose_name_plural': 'Types of pass',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='SubjectDifficulty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('name_pl', models.CharField(max_length=128, null=True)),
                ('name_ua', models.CharField(max_length=128, null=True)),
                ('name_ru', models.CharField(max_length=128, null=True)),
                ('order', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Class level',
                'verbose_name_plural': 'Class levels',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SubjectToTeacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('groups', models.IntegerField(verbose_name='Number of groups')),
                ('hours', models.FloatField(max_length=3, verbose_name='Number of hours')),
                ('description', models.CharField(blank=True, max_length=512, null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Subject - Teacher',
                'verbose_name_plural': 'Subjects - Teachers',
            },
        ),
        migrations.CreateModel(
            name='SubjectType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_pl', models.CharField(max_length=256, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_ua', models.CharField(max_length=256, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_ru', models.CharField(max_length=256, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
            ],
            options={
                'verbose_name': 'Type of classes',
                'verbose_name_plural': 'Types of classes',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_pl', models.CharField(max_length=256, null=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_ua', models.CharField(max_length=256, null=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('name_ru', models.CharField(max_length=256, null=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='name')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('semesters', models.IntegerField(blank=True, null=True, verbose_name='Number of semesters')),
                ('years', models.IntegerField(blank=True, null=True, verbose_name='Number of years')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End date')),
                ('is_first', models.BooleanField(blank=True, null=True, verbose_name='First')),
                ('is_last', models.BooleanField(blank=True, null=True, verbose_name='Last')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='trainman.department', verbose_name='Unit')),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
                'ordering': ('-is_active', 'name', '-level__name', '-type__name', 'profile__name', 'start_date'),
                'permissions': (('assign_education_area_course', 'Can assign education area'),),
            },
        ),
    ]
