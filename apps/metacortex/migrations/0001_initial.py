# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('trinity', '0001_initial'),
        ('merovingian', '0002_auto_20160123_1216'),
        ('trainman', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AssessmentForm',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('name', models.CharField(max_length=128)),
                ('name_pl', models.CharField(null=True, max_length=128)),
                ('name_en', models.CharField(null=True, max_length=128)),
                ('name_ua', models.CharField(null=True, max_length=128)),
                ('name_ru', models.CharField(null=True, max_length=128)),
                ('order', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['order', 'name'],
                'verbose_name': 'Evaluation form',
                'verbose_name_plural': 'Evaluation forms',
            },
        ),
        migrations.CreateModel(
            name='DidacticMethodMajor',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('name', models.CharField(max_length=128)),
                ('name_pl', models.CharField(null=True, max_length=128)),
                ('name_en', models.CharField(null=True, max_length=128)),
                ('name_ua', models.CharField(null=True, max_length=128)),
                ('name_ru', models.CharField(null=True, max_length=128)),
                ('order', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['order', 'name'],
                'verbose_name': 'Major teaching method',
                'verbose_name_plural': 'Major teaching methods',
            },
        ),
        migrations.CreateModel(
            name='DidacticMethodMinor',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('name', models.CharField(max_length=128)),
                ('name_pl', models.CharField(null=True, max_length=128)),
                ('name_en', models.CharField(null=True, max_length=128)),
                ('name_ua', models.CharField(null=True, max_length=128)),
                ('name_ru', models.CharField(null=True, max_length=128)),
                ('order', models.IntegerField(default=0)),
                ('major_didactic_method', models.ForeignKey(to='metacortex.DidacticMethodMajor', verbose_name='Major teaching method', related_name='didactic_methods')),
            ],
            options={
                'ordering': ['order', 'name'],
                'verbose_name': 'Minor teachong method',
                'verbose_name_plural': 'Minior teachong methods',
            },
        ),
        migrations.CreateModel(
            name='ECTS',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('name', models.CharField(max_length=255)),
                ('name_pl', models.CharField(null=True, max_length=255)),
                ('name_en', models.CharField(null=True, max_length=255)),
                ('name_ua', models.CharField(null=True, max_length=255)),
                ('name_ru', models.CharField(null=True, max_length=255)),
                ('is_default', models.BooleanField(default=False)),
                ('order', models.IntegerField(null=True, blank=True)),
                ('flag', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'ordering': ('is_default', 'name'),
                'verbose_name': 'ECTS equivalent in hours',
                'verbose_name_plural': 'ECTS equivalents in hours',
            },
        ),
        migrations.CreateModel(
            name='LectureLanguage',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('name', models.CharField(max_length=64)),
                ('name_pl', models.CharField(null=True, max_length=64)),
                ('name_en', models.CharField(null=True, max_length=64)),
                ('name_ua', models.CharField(null=True, max_length=64)),
                ('name_ru', models.CharField(null=True, max_length=64)),
            ],
            options={
                'verbose_name': 'Language',
                'verbose_name_plural': 'Languages',
            },
        ),
        migrations.CreateModel(
            name='PracticeType',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('name', models.CharField(max_length=64)),
                ('name_pl', models.CharField(null=True, max_length=64)),
                ('name_en', models.CharField(null=True, max_length=64)),
                ('name_ua', models.CharField(null=True, max_length=64)),
                ('name_ru', models.CharField(null=True, max_length=64)),
            ],
            options={
                'verbose_name': 'Type of practice',
                'verbose_name_plural': 'Types of practices',
            },
        ),
        migrations.CreateModel(
            name='SubjectDifficulty',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('name', models.CharField(max_length=128)),
                ('name_pl', models.CharField(null=True, max_length=128)),
                ('name_en', models.CharField(null=True, max_length=128)),
                ('name_ua', models.CharField(null=True, max_length=128)),
                ('name_ru', models.CharField(null=True, max_length=128)),
                ('order', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['order', 'name'],
                'verbose_name': 'Class level',
                'verbose_name_plural': 'Class levels',
            },
        ),
        migrations.CreateModel(
            name='Syllabus',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('is_published', models.BooleanField(default=False, verbose_name='Published')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Syllabus',
                'verbose_name_plural': 'Syllabuses',
            },
        ),
        migrations.CreateModel(
            name='SyllabusToECTS',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('hours', models.FloatField(null=True, blank=True)),
                ('ects', models.ForeignKey(to='metacortex.ECTS')),
            ],
            options={
                'ordering': ('-ects__is_default', 'ects__order', 'ects__name'),
            },
        ),
        migrations.CreateModel(
            name='SyllabusYear',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, verbose_name='ID', auto_created=True)),
                ('date', models.DateField()),
                ('read_only', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-date'],
                'verbose_name': 'Syllabus year',
                'verbose_name_plural': 'Syllabuses years',
            },
        ),
        migrations.CreateModel(
            name='SyllabusModule',
            fields=[
                ('syllabus_ptr', models.OneToOneField(to='metacortex.Syllabus', auto_created=True, primary_key=True, parent_link=True, serialize=False)),
                ('module_description', models.TextField(blank=True, verbose_name='Module description')),
                ('module_description_pl', models.TextField(null=True, blank=True, verbose_name='Module description')),
                ('module_description_en', models.TextField(null=True, blank=True, verbose_name='Module description')),
                ('module_description_ua', models.TextField(null=True, blank=True, verbose_name='Module description')),
                ('module_description_ru', models.TextField(null=True, blank=True, verbose_name='Module description')),
                ('additional_information', models.TextField(blank=True, verbose_name='Additional remarks')),
                ('additional_information_pl', models.TextField(null=True, blank=True, verbose_name='Additional remarks')),
                ('additional_information_en', models.TextField(null=True, blank=True, verbose_name='Additional remarks')),
                ('additional_information_ua', models.TextField(null=True, blank=True, verbose_name='Additional remarks')),
                ('additional_information_ru', models.TextField(null=True, blank=True, verbose_name='Additional remarks')),
                ('coordinator', models.ForeignKey(null=True, to='trainman.Teacher', blank=True, verbose_name='Coordinator', related_name='module_coordinator')),
                ('lecture_languages', models.ManyToManyField(related_name='lecturelanguages', to='metacortex.LectureLanguage', blank=True, verbose_name='Languages')),
                ('module', models.OneToOneField(to='merovingian.Module', related_name='syllabus')),
                ('unit_source', models.ForeignKey(null=True, to='trainman.Department', blank=True, verbose_name='Source unit (the one that the module is offered by)', related_name='unit_source')),
                ('unit_target', models.ForeignKey(null=True, to='trainman.Department', blank=True, verbose_name='Target unit (the one that the module is offered for)', related_name='unit_target')),
            ],
            options={
                'ordering': ['module__name'],
                'verbose_name': 'Module syllabus',
                'verbose_name_plural': 'Module syllabuses',
            },
            bases=('metacortex.syllabus',),
        ),
        migrations.CreateModel(
            name='SyllabusPractice',
            fields=[
                ('syllabus_ptr', models.OneToOneField(to='metacortex.Syllabus', auto_created=True, primary_key=True, parent_link=True, serialize=False)),
                ('learning_outcomes_verification', models.TextField(blank=True, verbose_name='Sposób weryfikacji efektów kształcenia')),
                ('description', models.TextField(blank=True)),
                ('description_pl', models.TextField(null=True, blank=True)),
                ('description_en', models.TextField(null=True, blank=True)),
                ('description_ua', models.TextField(null=True, blank=True)),
                ('description_ru', models.TextField(null=True, blank=True)),
                ('education_effects', models.TextField(blank=True)),
                ('education_effects_pl', models.TextField(null=True, blank=True)),
                ('education_effects_en', models.TextField(null=True, blank=True)),
                ('education_effects_ua', models.TextField(null=True, blank=True)),
                ('education_effects_ru', models.TextField(null=True, blank=True)),
                ('additional_information', models.TextField(blank=True)),
                ('additional_information_pl', models.TextField(null=True, blank=True)),
                ('additional_information_en', models.TextField(null=True, blank=True)),
                ('additional_information_ua', models.TextField(null=True, blank=True)),
                ('additional_information_ru', models.TextField(null=True, blank=True)),
                ('subject', models.ForeignKey(to='merovingian.Subject')),
                ('teacher', models.ForeignKey(to='trainman.Teacher')),
                ('type', models.ForeignKey(null=True, to='metacortex.PracticeType', blank=True)),
            ],
            options={
                'ordering': ['subject__name'],
                'verbose_name': 'Practice syllabus',
                'verbose_name_plural': 'Practice syllabuses',
            },
            bases=('metacortex.syllabus', models.Model),
        ),
        migrations.CreateModel(
            name='SyllabusSubject',
            fields=[
                ('syllabus_ptr', models.OneToOneField(to='metacortex.Syllabus', auto_created=True, primary_key=True, parent_link=True, serialize=False)),
                ('learning_outcomes_verification', models.TextField(blank=True, verbose_name='Sposób weryfikacji efektów kształcenia')),
                ('additional_name', models.CharField(max_length=255, blank=True, verbose_name='Title of course or additional information regarding the course name')),
                ('additional_name_pl', models.CharField(null=True, max_length=255, blank=True, verbose_name='Title of course or additional information regarding the course name')),
                ('additional_name_en', models.CharField(null=True, max_length=255, blank=True, verbose_name='Title of course or additional information regarding the course name')),
                ('additional_name_ua', models.CharField(null=True, max_length=255, blank=True, verbose_name='Title of course or additional information regarding the course name')),
                ('additional_name_ru', models.CharField(null=True, max_length=255, blank=True, verbose_name='Title of course or additional information regarding the course name')),
                ('initial_requirements', models.TextField(blank=True, verbose_name='Prerequisities')),
                ('initial_requirements_pl', models.TextField(null=True, blank=True, verbose_name='Prerequisities')),
                ('initial_requirements_en', models.TextField(null=True, blank=True, verbose_name='Prerequisities')),
                ('initial_requirements_ua', models.TextField(null=True, blank=True, verbose_name='Prerequisities')),
                ('initial_requirements_ru', models.TextField(null=True, blank=True, verbose_name='Prerequisities')),
                ('literature', models.TextField(blank=True, verbose_name='Reading list')),
                ('literature_pl', models.TextField(null=True, blank=True, verbose_name='Reading list')),
                ('literature_en', models.TextField(null=True, blank=True, verbose_name='Reading list')),
                ('literature_ua', models.TextField(null=True, blank=True, verbose_name='Reading list')),
                ('literature_ru', models.TextField(null=True, blank=True, verbose_name='Reading list')),
                ('subjects_scope', models.TextField(blank=True, verbose_name='List of topics')),
                ('subjects_scope_pl', models.TextField(null=True, blank=True, verbose_name='List of topics')),
                ('subjects_scope_en', models.TextField(null=True, blank=True, verbose_name='List of topics')),
                ('subjects_scope_ua', models.TextField(null=True, blank=True, verbose_name='List of topics')),
                ('subjects_scope_ru', models.TextField(null=True, blank=True, verbose_name='List of topics')),
                ('assessment_conditions', models.TextField(null=True, blank=True, verbose_name='Assessment conditions')),
                ('additional_information', models.TextField(blank=True, verbose_name='Additional remarks')),
                ('additional_information_pl', models.TextField(null=True, blank=True, verbose_name='Additional remarks')),
                ('additional_information_en', models.TextField(null=True, blank=True, verbose_name='Additional remarks')),
                ('additional_information_ua', models.TextField(null=True, blank=True, verbose_name='Additional remarks')),
                ('additional_information_ru', models.TextField(null=True, blank=True, verbose_name='Additional remarks')),
                ('education_effects', models.TextField(blank=True, verbose_name='Additional learning outcomes')),
                ('education_effects_pl', models.TextField(null=True, blank=True, verbose_name='Additional learning outcomes')),
                ('education_effects_en', models.TextField(null=True, blank=True, verbose_name='Additional learning outcomes')),
                ('education_effects_ua', models.TextField(null=True, blank=True, verbose_name='Additional learning outcomes')),
                ('education_effects_ru', models.TextField(null=True, blank=True, verbose_name='Additional learning outcomes')),
                ('assessment_forms', models.ManyToManyField(to='metacortex.AssessmentForm', blank=True, verbose_name='Evaluation form')),
                ('didactic_methods', models.ManyToManyField(to='metacortex.DidacticMethodMinor', blank=True, verbose_name='Teaching methods')),
                ('module_learning_outcomes', models.ManyToManyField(to='trinity.ModuleLearningOutcome', blank=True, verbose_name='Module learning outcomes')),
                ('subject', models.ForeignKey(to='merovingian.Subject')),
                ('subject_difficulty', models.ForeignKey(null=True, to='metacortex.SubjectDifficulty', blank=True, verbose_name='Class level')),
                ('teacher', models.ForeignKey(to='trainman.Teacher')),
            ],
            options={
                'ordering': ['subject__name'],
                'verbose_name': 'Subject syllabus',
                'verbose_name_plural': 'Subject syllabuses',
            },
            bases=('metacortex.syllabus', models.Model),
        ),
        migrations.AddField(
            model_name='syllabustoects',
            name='syllabus',
            field=models.ForeignKey(to='metacortex.Syllabus'),
        ),
        migrations.AddField(
            model_name='syllabus',
            name='ectss',
            field=models.ManyToManyField(to='metacortex.ECTS', through='metacortex.SyllabusToECTS', blank=True),
        ),
    ]
