# Generated by Django 5.2.5 on 2025-08-27 15:24

import apps.syjon.lib.validators
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DepartmentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='Name')),
                ('name_pl', models.CharField(max_length=256, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='Name')),
                ('name_ua', models.CharField(max_length=256, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='Name')),
                ('name_ru', models.CharField(max_length=256, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Unit type',
                'verbose_name_plural': 'Unit types',
            },
        ),
        migrations.CreateModel(
            name='IdentityDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='Name')),
                ('name_pl', models.CharField(max_length=256, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='Name')),
                ('name_ua', models.CharField(max_length=256, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='Name')),
                ('name_ru', models.CharField(max_length=256, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='Name')),
            ],
            options={
                'verbose_name': 'ID document',
                'verbose_name_plural': 'ID documents',
            },
        ),
        migrations.CreateModel(
            name='Occupation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('name_pl', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('name_ua', models.CharField(max_length=256, null=True, verbose_name='Name')),
                ('name_ru', models.CharField(max_length=256, null=True, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Occupation',
                'verbose_name_plural': 'Occupations',
            },
        ),
        migrations.CreateModel(
            name='TeacherDegree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='Name')),
                ('name_pl', models.CharField(max_length=256, null=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='Name')),
                ('name_ua', models.CharField(max_length=256, null=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='Name')),
                ('name_ru', models.CharField(max_length=256, null=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Degree',
                'verbose_name_plural': 'Deegrees',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='TeacherPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='Name')),
                ('name_pl', models.CharField(max_length=256, null=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='Name')),
                ('name_ua', models.CharField(max_length=256, null=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='Name')),
                ('name_ru', models.CharField(max_length=256, null=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Position',
                'verbose_name_plural': 'Positions',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='Name')),
                ('name_pl', models.CharField(max_length=256, null=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='Name')),
                ('name_ua', models.CharField(max_length=256, null=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='Name')),
                ('name_ru', models.CharField(max_length=256, null=True, validators=[django.core.validators.MinLengthValidator(2), apps.syjon.lib.validators.validate_white_space], verbose_name='Name')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='trainman.department', verbose_name='Superior unit')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='trainman.departmenttype', verbose_name='Type')),
            ],
            options={
                'verbose_name': 'Unit',
                'verbose_name_plural': 'Units',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('second_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Middle name')),
                ('pesel', models.CharField(blank=True, max_length=11, null=True, validators=[django.core.validators.MinLengthValidator(10)], verbose_name='PESEL')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='trainman.department', verbose_name='Unit')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User profile',
                'verbose_name_plural': 'User profiles',
                'ordering': ('user__last_name',),
            },
        ),
        migrations.CreateModel(
            name='UserOccupation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='start date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='end date')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='trainman.department', verbose_name='Unit')),
                ('occupation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='trainman.occupation', verbose_name='Occupation')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trainman.userprofile', verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Position',
                'verbose_name_plural': 'Users Positions',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trainman.teacherdegree', verbose_name='Degree')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trainman.teacherposition', verbose_name='Position')),
                ('user_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='trainman.userprofile', verbose_name='User')),
            ],
            options={
                'verbose_name': 'Teacher',
                'verbose_name_plural': 'Teachers',
                'ordering': ('user_profile__user__last_name',),
            },
        ),
    ]
